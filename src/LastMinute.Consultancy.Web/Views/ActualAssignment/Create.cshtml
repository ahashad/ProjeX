@model LastMinute.Consultancy.Application.ActualAssignment.Commands.CreateActualAssignmentCommand
@using System.Linq

@{
    ViewData["Title"] = "Create Assignment";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-plus me-2"></i>Create New Assignment
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        @if (ViewBag.ConflictingAssignment != null)
                        {
                            var conflict = (LastMinute.Consultancy.Application.ActualAssignment.ActualAssignmentDto)ViewBag.ConflictingAssignment;
                            <div class="alert alert-warning">
                                <strong>Conflict:</strong> This slot is already assigned to @conflict.EmployeeName from @conflict.StartDate.ToString("d") to @(conflict.EndDate?.ToString("d") ?? "open end").
                            </div>
                        }

                        @if (ViewBag.AvailableEmployees != null)
                        {
                            var available = (System.Collections.Generic.IEnumerable<LastMinute.Consultancy.Application.Employee.EmployeeDto>)ViewBag.AvailableEmployees;
                            if (available.Any())
                            {
                                <div class="alert alert-info">
                                    <p>Available employees for this role:</p>
                                    <ul class="mb-0">
                                        @foreach (var emp in available)
                                        {
                                            <li>@emp.FullName (@emp.Email)</li>
                                        }
                                    </ul>
                                </div>
                            }
                        }
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ProjectId" class="form-label">Project</label>
                                    <select asp-for="ProjectId" class="form-select" asp-items="ViewBag.ProjectId" id="projectSelect">
                                        <option value="">Select a project...</option>
                                    </select>
                                    <span asp-validation-for="ProjectId" class="text-danger"></span>
                                    <div class="form-text">Only active (In Progress) projects are shown.</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="PlannedTeamSlotId" class="form-label">Planned Position</label>
                                    <select asp-for="PlannedTeamSlotId" class="form-select" asp-items="ViewBag.PlannedTeamSlotId" id="plannedPositionSelect">
                                        <option value="">Select a planned position...</option>
                                    </select>
                                    <span asp-validation-for="PlannedTeamSlotId" class="text-danger"></span>
                                    <div class="form-text">Available positions for the selected project.</div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="EmployeeId" class="form-label">Employee</label>
                                    <select asp-for="EmployeeId" class="form-select" id="employeeSelect">
                                        <option value="">Search and select an employee...</option>
                                    </select>
                                    <span asp-validation-for="EmployeeId" class="text-danger"></span>
                                    <div class="form-text">Search by employee name, role, or email. Only active employees are shown.</div>
                                </div>
                            </div>
                            <div class="col-md-6">


                                <!-- Hidden allocation percentage field - value will be populated from planned slot -->
                                <input asp-for="AllocationPercent" type="hidden" id="allocationPercentInput" />
                                
                                <!-- Display allocation percentage as read-only info -->
                                <div class="mb-3" id="allocationDisplay" style="display: none;">
                                    <label class="form-label">Allocation Percentage</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control" id="allocationDisplayValue" readonly />
                                        <span class="input-group-text">%</span>
                                    </div>
                                    <div class="form-text">Allocation percentage is determined by the planned position.</div>
                                </div>
                            </div>
                        </div>

                        <!-- Working period display -->
                        <div class="row" id="workingPeriodDisplay" style="display: none;">
                            <div class="col-md-6">
                                
                                <!-- Employee details display -->
                                <div class="mb-3" id="employeeDetails" style="display: none;">
                                    <label class="form-label">Selected Employee Details</label>
                                    <div class="card card-body bg-light">
                                        <div class="row">
                                            <div class="col-6">
                                                <strong id="employeeFullName"></strong><br>
                                                <small class="text-muted" id="employeeRole"></small>
                                            </div>
                                            <div class="col-6 text-end">
                                                <small class="text-muted">
                                                    Salary: <strong id="employeeSalary"></strong><br>
                                                    Incentive: <strong id="employeeIncentive"></strong>
                                                </small>
                                            </div>
                                        </div>
                                        <div class="mt-2">
                                            <small class="text-muted">
                                                <i class="fas fa-envelope me-1"></i><span id="employeeEmail"></span>
                                            </small>
                                        </div>
                                    </div>
                                </div>
                                
                                
                                

                                <div class="mb-3">
                                    <label class="form-label">Working Period</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control" id="workingPeriodValue" readonly/>
                                        <span class="input-group-text">months</span>
                                    </div>
                                    <div class="form-text">Working period is determined by the planned position.</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Role</label>
                                    <input type="text" class="form-control" id="roleNameValue" readonly />
                                    <div class="form-text">Role for this planned position.</div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="StartDate" class="form-label">Start Date</label>
                                    <input asp-for="StartDate" class="form-control" type="date" />
                                    <span asp-validation-for="StartDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="EndDate" class="form-label">End Date</label>
                                    <input asp-for="EndDate" class="form-control" type="date" />
                                    <span asp-validation-for="EndDate" class="text-danger"></span>
                                    <div class="form-text">Leave empty to use project end date.</div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label">Notes</label>
                            <textarea asp-for="Notes" class="form-control" rows="3" placeholder="Enter any additional notes about this assignment..."></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <div id="cost-comparison" class="alert alert-warning" style="display: none;">
                            <h6><i class="fas fa-exclamation-triangle me-2"></i>Cost Comparison</h6>
                            <div id="cost-details"></div>
                            <small class="text-muted">This assignment will require approval due to cost differences.</small>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" 
                               asp-controller="PlannedTeamSlot" 
                               asp-route-projectId="@Model.ProjectId"
                               class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Back to Assignments
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Create Assignment
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <!-- Select2 CSS and JS -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    
    <style>
        #employeeDetails .card {
     border: 1px solid #dee2e6;
  margin-bottom: 0;
        }
        
 .select2-results__option {
   padding: 8px 12px !important;
      }
       
     .select2-results__option--highlighted {
     background-color: #0d6efd !important;
 color: white !important;
   }
    
  .employee-option-container {
   width: 100%;
   min-height: 40px;
    }
        
    .employee-salary-info {
            font-size: 0.875rem;
       color: #6c757d;
       font-weight: 500;
        }
    
    .select2-container--bootstrap-5 .select2-results__option {
         padding: 0.5rem 0.75rem;
        }
      
 .select2-container--bootstrap-5 .select2-results__option .d-flex {
align-items: flex-start;
}
    </style>
    
    <script>
        $(document).ready(function() {
            // Get URL parameters for auto-selection
            const urlParams = new URLSearchParams(window.location.search);
            const roleId = urlParams.get('roleId');
            
            // Initialize enhanced employee dropdown with search
            initializeEmployeeDropdown();
  
            // Auto-populate planned positions when project changes
            $('#projectSelect').change(function() {
                var projectId = $(this).val();
                loadPlannedPositions(projectId, roleId);
            });

            // Auto-populate allocation percentage and other details from planned slot
            $('#plannedPositionSelect').change(function() {
                var plannedTeamSlotId = $(this).val();
                if (plannedTeamSlotId) {
                    // Get planned slot details via AJAX
                    $.get('@Url.Action("GetPlannedSlotDetails")', { plannedTeamSlotId: plannedTeamSlotId })
                        .done(function(data) {
                            // Populate hidden allocation percentage field
                            $('#allocationPercentInput').val(data.allocationPercent);
                            
                            // Show and populate display fields
                            $('#allocationDisplayValue').val(data.allocationPercent);
                            $('#allocationDisplay').show();
                            
                            $('#workingPeriodValue').val(data.periodMonths);
                            $('#roleNameValue').val(data.roleName);
                            $('#workingPeriodDisplay').show();
                        })
                        .fail(function() {
                            alert('Error loading planned position details. Please try again.');
                            hidePositionDetails();
                        });
                } else {
                    hidePositionDetails();
     // Reset employee dropdown to show all employees
   loadEmployeesForRole(null);
                }
            });

            // Employee selection change handler for cost comparison and details display
            $('#employeeSelect').on('select2:select', function(e) {
                var selectedData = e.params.data;
               var slotId = $('#plannedPositionSelect').val();
                
                if (selectedData.id) {
                    // Show employee details
                   showEmployeeDetails(selectedData);
     
          if (slotId) {
       // Show cost comparison
            $('#cost-comparison').show();
 $('#cost-details').html('Cost comparison will be calculated when you submit the form.');
 }
  } else {
 hideEmployeeDetails();
           $('#cost-comparison').hide();
      }
      });

       // If planned position is pre-selected (from ViewBag.AutoSelectedSlotId), trigger change event
            @if (ViewBag.AutoSelectedSlotId != null)
            {
           <text>
         setTimeout(function() {
   $('#plannedPositionSelect').trigger('change');
    }, 100);
        </text>
            }
      
       // If planned slot details are already available (pre-populated from server), show them
            @if (ViewBag.PlannedSlotDetails != null)
     {
     <text>
     setTimeout(function() {
                 var plannedSlot = @Html.Raw(Json.Serialize(ViewBag.PlannedSlotDetails));
      $('#allocationPercentInput').val(plannedSlot.AllocationPercent);
         $('#allocationDisplayValue').val(plannedSlot.AllocationPercent);
      $('#allocationDisplay').show();
          $('#workingPeriodValue').val(plannedSlot.PeriodMonths);
       $('#roleNameValue').val(plannedSlot.RoleName);
 $('#workingPeriodDisplay').show();
    // Load employees for the slot's role
  loadEmployeesForRole(plannedSlot.RoleName);
     }, 100);
  </text>
      }
 
            // Initial load if project is already selected
        var initialProjectId = $('#projectSelect').val();
        if (initialProjectId && !$('#plannedPositionSelect option').length > 1) {
   loadPlannedPositions(initialProjectId, roleId);
            }
     });

  function initializeEmployeeDropdown() {
        // Initialize Select2 with custom template and search
            $('#employeeSelect').select2({
                theme: 'bootstrap-5',
           placeholder: 'Search and select an employee...',
                allowClear: true,
      ajax: {
              url: '@Url.Action("GetEmployeesForAssignment")',
        dataType: 'json',
     delay: 250,
             data: function(params) {
      return {
  roleId: getCurrentRoleId(),
             search: params.term,
      page: params.page || 1
      };
 },
processResults: function(data) {
   return {
   results: data.employees.map(function(employee) {
     return {
       id: employee.id,
        text: employee.displayText,
                fullName: employee.fullName,
          roleName: employee.roleName,
           roleId: employee.roleId,
         salary: employee.salary,
      monthlyIncentive: employee.monthlyIncentive,
       email: employee.email
      };
              })
             };
     },
       cache: true
    },
         templateResult: function(employee) {
  if (employee.loading) {
             return employee.text;
 }
            
          var $container = $(
       '<div class="d-flex justify-content-between align-items-center">' +
         '<div>' +
       '<div class="fw-bold">' + employee.fullName + '</div>' +
       '<small class="fw-normal">' + employee.roleName + '</small>' +
              '</div>' +
            '<div class="text-end">' +
                      '<small class="fw-normal">$' + Number(employee.salary).toLocaleString() + ' + $' + Number(employee.monthlyIncentive).toLocaleString() + '</small>' +
         '</div>' +
           '</div>'
               );
      return $container;
    },
       templateSelection: function(employee) {
         return employee.fullName || employee.text;
       },
        escapeMarkup: function(markup) {
     return markup;
     }
     });
        }

        function loadEmployeesForRole(roleName) {
            var roleId = getCurrentRoleId();
     $('#employeeSelect').val(null).trigger('change');
            // Force refresh of Select2 data
    $('#employeeSelect').select2('destroy');
          initializeEmployeeDropdown();
        }

        function getCurrentRoleId() {
            // Try to get role ID from planned position selection
   var selectedOption = $('#plannedPositionSelect option:selected');
            if (selectedOption.length) {
    // This would require adding data attributes to the planned position options
                // For now, return null to show all employees
                return null;
  }
       return null;
    }

        function showEmployeeDetails(employeeData) {
            $('#employeeFullName').text(employeeData.fullName);
      $('#employeeRole').text(employeeData.roleName);
            $('#employeeSalary').text('$' + Number(employeeData.salary).toLocaleString());
  $('#employeeIncentive').text('$' + Number(employeeData.monthlyIncentive).toLocaleString());
$('#employeeEmail').text(employeeData.email);
    $('#employeeDetails').show();
        }

   function hideEmployeeDetails() {
            $('#employeeDetails').hide();
      }

    function loadPlannedPositions(projectId, roleId) {
            if (projectId) {
   // Show loading state
       $('#plannedPositionSelect').html('<option value="">Loading positions...</option>');
           
     // Load available planned positions via AJAX
     $.get('@Url.Action("GetAvailablePlannedPositions")', { 
         projectId: projectId, 
    roleId: roleId 
})
          .done(function(data) {
      // Clear existing options
          $('#plannedPositionSelect').empty();
$('#plannedPositionSelect').append('<option value="">Select a planned position...</option>');
                    
   // Add available positions
          $.each(data.positions, function(index, position) {
        var option = $('<option></option>')
  .attr('value', position.Id)
              .attr('data-role-id', position.RoleId)
                .text(position.Description);
            $('#plannedPositionSelect').append(option);
  });
         
    // Auto-select if roleId matched a position
      if (data.autoSelectId && data.autoSelectId !== '00000000-0000-0000-0000-000000000000') {
  $('#plannedPositionSelect').val(data.autoSelectId);
 $('#plannedPositionSelect').trigger('change');
             }
        
        // Update form text
             var positionCount = data.positions.length;
          $('#plannedPositionSelect').siblings('.form-text')
  .text(`${positionCount} available position${positionCount !== 1 ? 's' : ''} for the selected project.`);
  })
   .fail(function() {
      $('#plannedPositionSelect').html('<option value="">Error loading positions</option>');
          alert('Error loading available positions. Please try again.');
    });
            } else {
           // Clear planned positions
        $('#plannedPositionSelect').empty().append('<option value="">Select a planned position...</option>');
    $('#plannedPositionSelect').siblings('.form-text').text('Available positions for the selected project.');
                hidePositionDetails();
            }
        }

 function hidePositionDetails() {
   $('#allocationPercentInput').val('');
            $('#allocationDisplay').hide();
            $('#workingPeriodDisplay').hide();
          $('#cost-comparison').hide();
            hideEmployeeDetails();
        }
    </script>
}

