@model LastMinute.Consultancy.Application.TimeEntry.TimeEntryDto
@using LastMinute.Consultancy.Domain.Enums
@{
    ViewData["Title"] = "Time Entry Details";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Time Entry Details</h1>
    <div>
        @if (Model.Status == TimeEntryStatus.Draft || Model.Status == TimeEntryStatus.Rejected)
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-primary shadow-sm">
           <i class="fas fa-edit fa-sm text-white-50"></i> Edit
         </a>
        }
        <a asp-action="Index" asp-route-actualAssignmentId="@Model.ActualAssignmentId" class="btn btn-sm btn-secondary shadow-sm">
      <i class="fas fa-arrow-left fa-sm text-white-50"></i> Back to Time Entries
        </a>
    </div>
</div>

<!-- Project Information -->
<div class="row mb-4">
    <div class="col-12">
 <div class="card shadow border-left-primary">
  <div class="card-header py-3">
          <div class="row align-items-center">
        <div class="col">
               <h6 class="m-0 font-weight-bold text-primary">
     <i class="fas fa-project-diagram"></i> Project Information
            </h6>
         </div>
  <div class="col-auto">
    <span class="badge badge-@(Model.Status.ToString().ToLower() switch { "draft" => "secondary", "submitted" => "warning", "approved" => "success", "rejected" => "danger", "invoiced" => "primary", _ => "secondary" }) badge-lg">
         @Model.Status
  </span>
         </div>
   </div>
     </div>
        <div class="card-body">
         <div class="row">
            <div class="col-md-6">
  <h6 class="text-primary font-weight-bold">@Model.ProjectName</h6>
             <p class="text-muted mb-2">
       <i class="fas fa-building"></i> Client: <strong>@Model.ClientName</strong>
      </p>
         </div>
         <div class="col-md-6">
  <p class="text-muted mb-2">
     <i class="fas fa-user"></i> Employee: <strong>@Model.EmployeeName</strong>
    </p>
   <p class="text-muted mb-2">
      <i class="fas fa-user-tag"></i> Role: <strong>@Model.RoleName</strong>
                 </p>
    </div>
       </div>
 </div>
</div>
    </div>
</div>

<!-- Time Entry Details -->
<div class="row">
    <div class="col-md-8">
        <div class="card shadow mb-4">
          <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Time Entry Information</h6>
            </div>
      <div class="card-body">
        <div class="row">
       <div class="col-md-4">
        <div class="form-group">
         <label class="font-weight-bold text-muted">Date</label>
          <div class="h5 text-dark">
         <i class="fas fa-calendar-day text-primary"></i>
     @Model.Date.ToString("MMMM dd, yyyy")
        </div>
      <small class="text-muted">@Model.Date.ToString("dddd")</small>
            </div>
 </div>
  <div class="col-md-4">
          <div class="form-group">
         <label class="font-weight-bold text-muted">Hours Logged</label>
      <div class="h5 text-dark">
      <i class="fas fa-clock text-success"></i>
      @Model.Hours.ToString("0.##") hours
               </div>
       <small class="text-muted">
               @if (Model.Hours >= 8)
     {
          <span class="text-success">Full day</span>
         }
           else if (Model.Hours >= 4)
     {
     <span class="text-warning">Half day</span>
         }
   else
            {
  <span class="text-info">Partial</span>
             }
          </small>
 </div>
        </div>
      <div class="col-md-4">
     <div class="form-group">
          <label class="font-weight-bold text-muted">Billing Status</label>
       <div class="h5">
   @if (Model.IsBillable)
          {
          <span class="text-success">
       <i class="fas fa-dollar-sign"></i> Billable
         </span>
          }
  else
          {
     <span class="text-muted">
               <i class="fas fa-times-circle"></i> Non-billable
        </span>
   }
     </div>
  @if (Model.IsBillable && Model.BillableRate.HasValue)
       {
                 <small class="text-muted">$@Model.BillableRate.Value.ToString("N2")/hour</small>
        }
   </div>
         </div>
         </div>

    <div class="form-group">
                    <label class="font-weight-bold text-muted">Work Description</label>
          <div class="p-3 bg-light rounded">
          @if (!string.IsNullOrEmpty(Model.Description))
       {
         @foreach (var line in Model.Description.Split('\n'))
         {
 <p class="mb-1">@line</p>
     }
   }
      else
             {
            <p class="text-muted mb-0">No description provided</p>
           }
        </div>
    </div>

   @if (Model.IsBillable && Model.BillableRate.HasValue)
 {
      <div class="row">
   <div class="col-md-6">
   <div class="card bg-light">
              <div class="card-body text-center">
     <h4 class="text-success">
     $@((Model.Hours * Model.BillableRate.Value).ToString("N2"))
             </h4>
       <p class="text-muted mb-0">Total Billable Amount</p>
           </div>
           </div>
        </div>
    </div>
  }
        </div>
      </div>
  </div>

    <div class="col-md-4">
        <!-- Status Information -->
        <div class="card shadow mb-4">
 <div class="card-header py-3">
   <h6 class="m-0 font-weight-bold text-primary">Status Information</h6>
 </div>
   <div class="card-body">
    <div class="mb-3">
            <label class="font-weight-bold text-muted">Current Status</label>
   <div class="mt-1">
     @switch (Model.Status)
     {
           case TimeEntryStatus.Draft:
     <span class="badge badge-secondary badge-lg">
         <i class="fas fa-edit"></i> Draft
          </span>
         <p class="small text-muted mt-2">This time entry is still being edited and hasn't been submitted for approval.</p>
 break;
     case TimeEntryStatus.Submitted:
     <span class="badge badge-warning badge-lg">
       <i class="fas fa-paper-plane"></i> Submitted
      </span>
      <p class="small text-muted mt-2">This time entry has been submitted and is waiting for manager approval.</p>
         break;
 case TimeEntryStatus.Approved:
             <span class="badge badge-success badge-lg">
         <i class="fas fa-check"></i> Approved
       </span>
          <p class="small text-muted mt-2">This time entry has been approved and can be included in client invoices.</p>
     break;
         case TimeEntryStatus.Rejected:
       <span class="badge badge-danger badge-lg">
        <i class="fas fa-times"></i> Rejected
             </span>
          <p class="small text-muted mt-2">This time entry was rejected and needs to be revised before resubmission.</p>
      break;
    case TimeEntryStatus.Invoiced:
          <span class="badge badge-primary badge-lg">
        <i class="fas fa-file-invoice-dollar"></i> Invoiced
      </span>
<p class="small text-muted mt-2">This time entry has been included in a client invoice and cannot be modified.</p>
         break;
      }
       </div>
            </div>

         @if (!string.IsNullOrEmpty(Model.ApprovedBy))
         {
        <div class="mb-3">
            <label class="font-weight-bold text-muted">
                @(Model.Status == TimeEntryStatus.Approved ? "Approved By" : "Processed By")
   </label>
   <p class="mb-1">@Model.ApprovedBy</p>
     @if (Model.ApprovedAt.HasValue)
      {
    <small class="text-muted">@Model.ApprovedAt.Value.ToString("MMM dd, yyyy 'at' h:mm tt")</small>
       }
                    </div>
            }
    </div>
        </div>

 <!-- Actions -->
        @if (Model.Status == TimeEntryStatus.Draft || Model.Status == TimeEntryStatus.Rejected)
{
 <div class="card shadow mb-4 border-left-success">
       <div class="card-header py-3 bg-success text-white">
            <h6 class="m-0 font-weight-bold">Available Actions</h6>
            </div>
         <div class="card-body">
      @if (Model.Status == TimeEntryStatus.Draft)
      {
       <p class="small mb-3">This time entry is ready to be submitted for approval.</p>
             <form asp-action="Submit" asp-route-id="@Model.Id" asp-route-actualAssignmentId="@Model.ActualAssignmentId" method="post" class="mb-2">
        @Html.AntiForgeryToken()
     <button type="submit" class="btn btn-success btn-sm btn-block" onclick="return confirm('Submit this time entry for approval?')">
       <i class="fas fa-paper-plane"></i> Submit for Approval
        </button>
   </form>
        }

 <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary btn-sm btn-block">
    <i class="fas fa-edit"></i> Edit Entry
         </a>

   <form asp-action="Delete" asp-route-id="@Model.Id" asp-route-actualAssignmentId="@Model.ActualAssignmentId" method="post">
    @Html.AntiForgeryToken()
     <button type="submit" class="btn btn-danger btn-sm btn-block" onclick="return confirm('Are you sure you want to delete this time entry?')">
            <i class="fas fa-trash"></i> Delete Entry
       </button>
              </form>
 </div>
 </div>
     }

        <!-- Audit Information -->
        <div class="card shadow mb-4">
    <div class="card-header py-3">
      <h6 class="m-0 font-weight-bold text-secondary">Audit Trail</h6>
 </div>
    <div class="card-body">
        <div class="mb-3">
       <label class="font-weight-bold text-muted">Created</label>
          <p class="mb-1">@Model.CreatedBy</p>
    <small class="text-muted">@Model.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</small>
                </div>

        @if (Model.ModifiedAt.HasValue)
{
           <div>
     <label class="font-weight-bold text-muted">Last Modified</label>
   <p class="mb-1">@Model.ModifiedBy</p>
            <small class="text-muted">@Model.ModifiedAt.Value.ToString("MMM dd, yyyy 'at' h:mm tt")</small>
            </div>
   }
            </div>
 </div>
    </div>
</div>