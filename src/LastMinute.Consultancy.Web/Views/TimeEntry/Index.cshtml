@model List<LastMinute.Consultancy.Application.TimeEntry.TimeEntryDto>
@using LastMinute.Consultancy.Domain.Enums
@{
    ViewData["Title"] = "Time Entries";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Time Entries</h1>
    <a asp-action="Create" asp-route-actualAssignmentId="@ViewBag.ActualAssignmentId" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
        <i class="fas fa-plus fa-sm text-white-50"></i> Create New Time Entry
    </a>
</div>

<!-- Filter Panel -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Filter Time Entries</h6>
    </div>
    <div class="card-body">
        <form method="get" asp-action="Index">
    <div class="row">
        <div class="col-md-3">
   <div class="form-group">
         <label for="fromDate">From Date</label>
              <input type="date" class="form-control" id="fromDate" name="fromDate" value="@ViewBag.FromDate" />
     </div>
        </div>
      <div class="col-md-3">
       <div class="form-group">
             <label for="toDate">To Date</label>
   <input type="date" class="form-control" id="toDate" name="toDate" value="@ViewBag.ToDate" />
     </div>
            </div>
  <div class="col-md-4">
   <div class="form-group">
      <label>&nbsp;</label>
              <div>
         <button type="submit" class="btn btn-primary">Filter</button>
              <a asp-action="Index" class="btn btn-secondary">Clear</a>
                   </div>
         </div>
    </div>
          </div>
        </form>
    </div>
</div>

<!-- Time Entries List -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">
        @if (ViewBag.ActualAssignmentId != null)
         {
         <text>Time Entries for Assignment</text>
    }
     else
            {
          <text>All Time Entries (@Model.Count)</text>
            }
        </h6>
    </div>
  <div class="card-body">
        @if (Model.Any())
   {
        <div class="table-responsive">
 <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
             <thead>
         <tr>
      <th>Date</th>
   <th>Employee</th>
    <th>Project</th>
                   <th>Role</th>
             <th>Hours</th>
        <th>Description</th>
    <th>Status</th>
       <th>Billable</th>
              <th>Rate</th>
      <th>Actions</th>
 </tr>
        </thead>
 <tbody>
                @foreach (var item in Model.OrderByDescending(t => t.Date))
 {
            <tr>
         <td>@item.Date.ToString("MMM dd, yyyy")</td>
           <td>@item.EmployeeName</td>
      <td>
  <strong>@item.ProjectName</strong><br />
   <small class="text-muted">@item.ClientName</small>
        </td>
      <td>@item.RoleName</td>
 <td class="text-center">
           <span class="badge badge-info">@item.Hours.ToString("0.##")h</span>
     </td>
          <td>
      @if (item.Description.Length > 50)
     {
           @item.Description.Substring(0, 50)<text>...</text>
     }
      else
       {
        @item.Description
     }
 </td>
         <td>
         @switch (item.Status)
         {
      case TimeEntryStatus.Draft:
   <span class="badge badge-secondary">Draft</span>
     break;
 case TimeEntryStatus.Submitted:
      <span class="badge badge-warning">Submitted</span>
   break;
           case TimeEntryStatus.Approved:
          <span class="badge badge-success">Approved</span>
          break;
           case TimeEntryStatus.Rejected:
      <span class="badge badge-danger">Rejected</span>
break;
         case TimeEntryStatus.Invoiced:
      <span class="badge badge-primary">Invoiced</span>
          break;
    }
  </td>
    <td class="text-center">
        @if (item.IsBillable)
     {
   <i class="fas fa-check text-success" title="Billable"></i>
        }
     else
    {
     <i class="fas fa-times text-danger" title="Non-billable"></i>
         }
  </td>
    <td class="text-right">
    @if (item.BillableRate.HasValue)
     {
        <text>$@item.BillableRate.Value.ToString("N2")</text>
        }
                 else
           {
         <span class="text-muted">N/A</span>
   }
             </td>
         <td>
   <div class="dropdown">
        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown">
        Actions
          </button>
       <div class="dropdown-menu">
    <a class="dropdown-item" asp-action="Details" asp-route-id="@item.Id">
       <i class="fas fa-eye"></i> Details
   </a>
          @if (item.Status == TimeEntryStatus.Draft || item.Status == TimeEntryStatus.Rejected)
           {
             <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Id">
   <i class="fas fa-edit"></i> Edit
  </a>
     <div class="dropdown-divider"></div>
        @if (item.Status == TimeEntryStatus.Draft)
     {
           <form asp-action="Submit" asp-route-id="@item.Id" asp-route-actualAssignmentId="@item.ActualAssignmentId" method="post" class="d-inline">
  @Html.AntiForgeryToken()
      <button type="submit" class="dropdown-item text-primary" onclick="return confirm('Submit this time entry for approval?')">
      <i class="fas fa-paper-plane"></i> Submit
       </button>
        </form>
        }
         <div class="dropdown-divider"></div>
               <form asp-action="Delete" asp-route-id="@item.Id" asp-route-actualAssignmentId="@item.ActualAssignmentId" method="post" class="d-inline">
  @Html.AntiForgeryToken()
  <button type="submit" class="dropdown-item text-danger" onclick="return confirm('Are you sure you want to delete this time entry?')">
       <i class="fas fa-trash"></i> Delete
    </button>
              </form>
  }
       </div>
         </div>
              </td>
     </tr>
    }
  </tbody>
          </table>
            </div>
   }
        else
        {
            <div class="text-center py-4">
      <i class="fas fa-clock fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No time entries found</h5>
       <p class="text-muted">
    @if (ViewBag.ActualAssignmentId != null)
        {
      <text>Start by creating your first time entry for this assignment.</text>
        }
    else
      {
           <text>Time entries will appear here once created.</text>
   }
    </p>
        <a asp-action="Create" asp-route-actualAssignmentId="@ViewBag.ActualAssignmentId" class="btn btn-primary">
             <i class="fas fa-plus"></i> Create Time Entry
      </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
   $(document).ready(function() {
            $('#dataTable').DataTable({
        "order": [[0, "desc"]],
          "pageLength": 25,
   "responsive": true
      });
        });
    </script>
}