@page "/Account/Login"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@using Microsoft.AspNetCore.Identity
@using ProjeX.Domain.Entities
@inject NavigationManager NavigationManager

<PageTitle>Login - ProjeX</PageTitle>

<div class="row justify-content-center">
  <div class="col-md-6 col-lg-4">
  <div class="card">
    <div class="card-header text-center">
   <h3>ProjeX</h3>
       <p class="text-muted">Sign in to your account</p>
      </div>
    <div class="card-body">
       <form method="post" action="/api/account/login">
 <AntiforgeryToken />
       
      @if (!string.IsNullOrEmpty(errorMessage))
        {
      <div class="alert alert-danger">
        @errorMessage
         </div>
        }

   <div class="mb-3">
         <label for="email" class="form-label">Email</label>
   <input type="email" id="email" name="Email" class="form-control" placeholder="Enter your email" required />
          </div>

    <div class="mb-3">
           <label for="password" class="form-label">Password</label>
      <input type="password" id="password" name="Password" class="form-control" placeholder="Enter your password" required />
      </div>

      <div class="mb-3 form-check">
     <input type="checkbox" id="rememberMe" name="RememberMe" class="form-check-input" value="true" />
     <input type="hidden" name="RememberMe" value="false" />
    <label for="rememberMe" class="form-check-label">Remember me</label>
 </div>

    <div class="d-grid">
     <button type="submit" class="btn btn-primary">
  Sign In
      </button>
   </div>
       </form>
      </div>
     <div class="card-footer text-center">
         <p class="mb-0">
    Don't have an account? <a href="/Account/Register">Register here</a>
     </p>
     </div>
  </div>
   </div>
</div>

@code {
    private string errorMessage = string.Empty;

    protected override void OnInitialized()
    {
  // Check for error message from query params
  var uri = new Uri(NavigationManager.Uri);
    var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        if (query.TryGetValue("error", out var error))
        {
    errorMessage = error.ToString();
 }
    }
}

